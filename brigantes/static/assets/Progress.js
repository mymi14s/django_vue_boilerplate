import{_ as c,c as g,w as e,e as l,f as n,g as s,h as t,a as b}from"./index.js";const v={};function C(y,a){const p=n("DocsComponents"),u=n("CCardHeader"),o=n("CProgressBar"),r=n("CProgress"),d=n("DocsExample"),m=n("CCardBody"),_=n("CCard"),f=n("CCol"),i=n("CRow");return b(),g(i,null,{default:e(()=>[l(f,{xs:12},{default:e(()=>[l(p,{href:"components/progress.html"}),l(_,{class:"mb-4"},{default:e(()=>[l(u,null,{default:e(()=>a[0]||(a[0]=[s("strong",null,"Vue Progress",-1),t(),s("small",null,"Basic example",-1)])),_:1,__:[0]}),l(m,null,{default:e(()=>[a[1]||(a[1]=s("p",{class:"text-body-secondary small"},[t(" Progress components are built with two HTML elements, some CSS to set the width, and a few attributes. We don'tuse "),s("a",{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress"},[t(" the HTML5 "),s("code",null,"<progress>"),t(" element ")]),t(" , ensuring you can stack progress bars, animate them, and place text labels over them. ")],-1)),l(d,{href:"components/progress.html"},{default:e(()=>[l(r,{class:"mb-3"},{default:e(()=>[l(o,{value:0})]),_:1}),l(r,{class:"mb-3"},{default:e(()=>[l(o,{value:25})]),_:1}),l(r,{class:"mb-3"},{default:e(()=>[l(o,{value:50})]),_:1}),l(r,{class:"mb-3"},{default:e(()=>[l(o,{value:75})]),_:1}),l(r,{class:"mb-3"},{default:e(()=>[l(o,{value:100})]),_:1})]),_:1})]),_:1,__:[1]})]),_:1})]),_:1}),l(f,{xs:12},{default:e(()=>[l(_,{class:"mb-4"},{default:e(()=>[l(u,null,{default:e(()=>a[2]||(a[2]=[s("strong",null,"Vue Progress",-1),t(),s("small",null,"Labels",-1)])),_:1,__:[2]}),l(m,null,{default:e(()=>[a[4]||(a[4]=s("p",{class:"text-body-secondary small"},[t(" Add labels to your progress bars by placing text within the "),s("code",null,"<CProgressBar>"),t(". ")],-1)),l(d,{href:"components/progress.html#labels"},{default:e(()=>[l(r,{class:"mb-3"},{default:e(()=>[l(o,{value:25},{default:e(()=>a[3]||(a[3]=[t("25%")])),_:1,__:[3]})]),_:1})]),_:1})]),_:1,__:[4]})]),_:1})]),_:1}),l(f,{xs:12},{default:e(()=>[l(_,{class:"mb-4"},{default:e(()=>[l(u,null,{default:e(()=>a[5]||(a[5]=[s("strong",null,"Vue Progress",-1),t(),s("small",null,"Height",-1)])),_:1,__:[5]}),l(m,null,{default:e(()=>[a[6]||(a[6]=s("p",{class:"text-body-secondary small"},[t(" We only set a "),s("code",null,"height"),t(" value on the "),s("code",null,"<CProgress>"),t(", so if you change that value the inner "),s("code",null,"<CProgressBar>"),t(" will automatically resize accordingly. ")],-1)),l(d,{href:"components/progress.html#height"},{default:e(()=>[l(r,{height:1,class:"mb-3"},{default:e(()=>[l(o,{value:25})]),_:1}),l(r,{height:20,class:"mb-3"},{default:e(()=>[l(o,{value:25})]),_:1})]),_:1})]),_:1,__:[6]})]),_:1})]),_:1}),l(f,{xs:12},{default:e(()=>[l(_,{class:"mb-4"},{default:e(()=>[l(u,null,{default:e(()=>a[7]||(a[7]=[s("strong",null,"Vue Progress",-1),t(),s("small",null,"Backgrounds",-1)])),_:1,__:[7]}),l(m,null,{default:e(()=>[a[8]||(a[8]=s("p",{class:"text-body-secondary small"},[t(" Use "),s("code",null,"color"),t(" prop to change the appearance of individual progress bars. ")],-1)),l(d,{href:"components/progress.html#backgrounds"},{default:e(()=>[l(r,{class:"mb-3"},{default:e(()=>[l(o,{color:"success",value:25})]),_:1}),l(r,{class:"mb-3"},{default:e(()=>[l(o,{color:"info",value:50})]),_:1}),l(r,{class:"mb-3"},{default:e(()=>[l(o,{color:"warning",value:75})]),_:1}),l(r,{class:"mb-3"},{default:e(()=>[l(o,{color:"danger",value:100})]),_:1})]),_:1})]),_:1,__:[8]})]),_:1})]),_:1}),l(f,{xs:12},{default:e(()=>[l(_,{class:"mb-4"},{default:e(()=>[l(u,null,{default:e(()=>a[9]||(a[9]=[s("strong",null,"Vue Progress",-1),t(),s("small",null,"Multiple bars",-1)])),_:1,__:[9]}),l(m,null,{default:e(()=>[a[10]||(a[10]=s("p",{class:"text-body-secondary small"}," Include multiple progress bars in a progress component if you need. ",-1)),l(d,{href:"components/progress.html#multiple-bars"},{default:e(()=>[l(r,{class:"mb-3"},{default:e(()=>[l(o,{value:15}),l(o,{color:"success",value:30}),l(o,{color:"info",value:20})]),_:1})]),_:1})]),_:1,__:[10]})]),_:1})]),_:1}),l(f,{xs:12},{default:e(()=>[l(_,{class:"mb-4"},{default:e(()=>[l(u,null,{default:e(()=>a[11]||(a[11]=[s("strong",null,"Vue Progress",-1),t(),s("small",null,"Striped",-1)])),_:1,__:[11]}),l(m,null,{default:e(()=>[a[12]||(a[12]=s("p",{class:"text-body-secondary small"},[t(" Add "),s("code",null,'variant="striped"'),t(" to any "),s("code",null,"<CProgressBar>"),t(" to apply a stripe via CSS gradient over the progress bar's background color. ")],-1)),l(d,{href:"components/progress.html#striped"},{default:e(()=>[l(r,{class:"mb-3"},{default:e(()=>[l(o,{color:"success",variant:"striped",value:25})]),_:1}),l(r,{class:"mb-3"},{default:e(()=>[l(o,{color:"info",variant:"striped",value:50})]),_:1}),l(r,{class:"mb-3"},{default:e(()=>[l(o,{color:"warning",variant:"striped",value:75})]),_:1}),l(r,{class:"mb-3"},{default:e(()=>[l(o,{color:"danger",variant:"striped",value:100})]),_:1})]),_:1})]),_:1,__:[12]})]),_:1})]),_:1}),l(f,{xs:12},{default:e(()=>[l(_,{class:"mb-4"},{default:e(()=>[l(u,null,{default:e(()=>a[13]||(a[13]=[s("strong",null,"Vue Progress",-1),t(),s("small",null,"Animated stripes",-1)])),_:1,__:[13]}),l(m,null,{default:e(()=>[a[14]||(a[14]=s("p",{class:"text-body-secondary small"},[t(" The striped gradient can also be animated. Add "),s("code",null,"animated"),t(" property to "),s("code",null,"<CProgressBar>"),t(" to animate the stripes right to left via CSS3 animations. ")],-1)),l(d,{href:"components/progress.html#animated-stripes"},{default:e(()=>[l(r,{class:"mb-3"},{default:e(()=>[l(o,{color:"success",variant:"striped",animated:"",value:25})]),_:1}),l(r,{class:"mb-3"},{default:e(()=>[l(o,{color:"info",variant:"striped",animated:"",value:50})]),_:1}),l(r,{class:"mb-3"},{default:e(()=>[l(o,{color:"warning",variant:"striped",animated:"",value:75})]),_:1}),l(r,{class:"mb-3"},{default:e(()=>[l(o,{color:"danger",variant:"striped",animated:"",value:100})]),_:1})]),_:1})]),_:1,__:[14]})]),_:1})]),_:1})]),_:1})}const h=c(v,[["render",C]]);export{h as default};
//# sourceMappingURL=Progress.js.map
