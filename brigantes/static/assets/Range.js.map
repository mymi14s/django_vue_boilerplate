{"version":3,"file":"Range.js","sources":["../../../frontend/src/views/forms/Range.vue"],"sourcesContent":["<template>\n  <CRow>\n    <CCol :xs=\"12\">\n      <DocsComponents href=\"forms/range.html\" />\n      <CCard class=\"mb-4\">\n        <CCardHeader> <strong>Vue Range</strong> <small></small> </CCardHeader>\n        <CCardBody>\n          <p class=\"text-body-secondary small\">\n            Create custom\n            <code>&lt;input type=&#34;range&#34;&gt;</code> controls with\n            <code>&lt;CFormRange&gt;</code>.\n          </p>\n          <DocsExample href=\"forms/range.html\">\n            <CFormLabel for=\"customRange1\">Example range</CFormLabel>\n            <CFormRange id=\"customRange1\" />\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Range</strong> <small>Disabled</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-body-secondary small\">\n            Add the <code>disabled</code> boolean attribute on an input to give\n            it a grayed out appearance and remove pointer events.\n          </p>\n          <DocsExample href=\"forms/range.html#disabled\">\n            <CFormLabel for=\"disabledRange\">Disabled range</CFormLabel>\n            <CFormRange id=\"disabledRange\" disabled />\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Range</strong> <small>Min and max</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-body-secondary small\">\n            Range inputs have implicit values for <code>min</code> and\n            <code>max</code>â€” <code>0</code> and <code>100</code>, respectively.\n            You may specify new values for those using the <code>min</code> and\n            <code>max</code> attributes.\n          </p>\n          <DocsExample href=\"forms/range.html#min-and-max\">\n            <CFormLabel for=\"customRange2\">Example range</CFormLabel>\n            <CFormRange id=\"customRange2\" :min=\"0\" :max=\"5\" :value=\"3\" />\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n    <CCol :xs=\"12\">\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <strong>Vue Range</strong> <small>Steps</small>\n        </CCardHeader>\n        <CCardBody>\n          <p class=\"text-body-secondary small\">\n            By default, range inputs &#34;snap&#34; to integer values. To change\n            this, you can specify a <code>step</code> value. In the example\n            below, we double the number of steps by using\n            <code>step=&#34;0.5&#34;</code>.\n          </p>\n          <DocsExample href=\"forms/range.html#steps\">\n            <CFormLabel for=\"customRange3\">Example range</CFormLabel>\n            <CFormRange\n              id=\"customRange3\"\n              :min=\"0\"\n              :max=\"5\"\n              :step=\"0.5\"\n              :value=\"3\"\n            />\n          </DocsExample>\n        </CCardBody>\n      </CCard>\n    </CCol>\n  </CRow>\n</template>\n"],"names":["_createBlock","_component_CRow","_createVNode","_component_CCol","_component_DocsComponents","_component_CCard","_component_CCardHeader","_cache","_createElementVNode","_component_CCardBody","_component_DocsExample","_component_CFormLabel","_component_CFormRange"],"mappings":"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"}