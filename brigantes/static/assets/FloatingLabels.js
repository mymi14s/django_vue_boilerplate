import{_ as b,c as x,w as e,e as l,f as n,g as t,h as a,a as F}from"./index.js";const y={};function w(h,o){const c=n("DocsComponents"),m=n("CCardHeader"),i=n("CFormInput"),s=n("CFormLabel"),u=n("CFormFloating"),r=n("DocsExample"),f=n("CCardBody"),p=n("CCard"),d=n("CCol"),_=n("CFormTextarea"),g=n("CFormSelect"),C=n("CRow");return F(),x(C,null,{default:e(()=>[l(d,{xs:12},{default:e(()=>[l(c,{href:"forms/floating-labels.html"}),l(p,{class:"mb-4"},{default:e(()=>[l(m,null,{default:e(()=>o[0]||(o[0]=[t("strong",null,"Vue Floating labels",-1)])),_:1,__:[0]}),l(f,null,{default:e(()=>[o[4]||(o[4]=t("p",{class:"text-body-secondary small"},[a(" Wrap a pair of "),t("code",null,"<CFormInput>"),a(" and "),t("code",null,"<CFormLabel>"),a(" elements in "),t("code",null,"CFormFloating"),a(" to enable floating labels with textual form fields. A "),t("code",null,"placeholder"),a(" is required on each "),t("code",null,"<CFormInput>"),a(" as our method of CSS-only floating labels uses the "),t("code",null,":placeholder-shown"),a(" pseudo-element. Also note that the "),t("code",null,"<CFormInput>"),a(" must come first so we can utilize a sibling selector (e.g., "),t("code",null,"~"),a("). ")],-1)),l(r,{href:"forms/floating-labels.html"},{default:e(()=>[l(u,{class:"mb-3"},{default:e(()=>[l(i,{id:"floatingInput",type:"email",placeholder:"name@example.com"}),l(s,{for:"floatingInput"},{default:e(()=>o[1]||(o[1]=[a("Email address")])),_:1,__:[1]})]),_:1}),l(u,null,{default:e(()=>[l(i,{id:"floatingPassword",type:"password",placeholder:"Password"}),l(s,{for:"floatingPassword"},{default:e(()=>o[2]||(o[2]=[a("Password")])),_:1,__:[2]})]),_:1})]),_:1}),o[5]||(o[5]=t("p",{class:"text-body-secondary small"},[a(" When there's a "),t("code",null,"value"),a(" already defined, "),t("code",null,"<CFormLabel>"),a(" s will automatically adjust to their floated position. ")],-1)),l(r,{href:"forms/floating-labels.html"},{default:e(()=>[l(u,null,{default:e(()=>[l(i,{id:"floatingInputValue",type:"email",placeholder:"name@example.com",value:"test@example.com"}),l(s,{for:"floatingInputValue"},{default:e(()=>o[3]||(o[3]=[a("Input with value")])),_:1,__:[3]})]),_:1})]),_:1})]),_:1,__:[4,5]})]),_:1})]),_:1}),l(d,{xs:12},{default:e(()=>[l(p,{class:"mb-4"},{default:e(()=>[l(m,null,{default:e(()=>o[6]||(o[6]=[t("strong",null,"Vue Floating labels",-1),a(),t("small",null,"Textareas",-1)])),_:1,__:[6]}),l(f,null,{default:e(()=>[o[9]||(o[9]=t("p",{class:"text-body-secondary small"},[a(" By default, "),t("code",null,"<CFormTextarea>"),a("s will be the same height as "),t("code",null,"<CFormInput>"),a("s. ")],-1)),l(r,{href:"forms/floating-labels.html#textareas"},{default:e(()=>[l(u,null,{default:e(()=>[l(_,{id:"floatingTextarea",placeholder:"Leave a comment here"}),l(s,{for:"floatingTextarea"},{default:e(()=>o[7]||(o[7]=[a("Comments")])),_:1,__:[7]})]),_:1})]),_:1}),o[10]||(o[10]=t("p",{class:"text-body-secondary small"},[a(" To set a custom height on your "),t("code",null,"<CFormTextarea;>"),a(", do not use the "),t("code",null,"rows"),a(" attribute. Instead, set an explicit "),t("code",null,"height"),a(" (either inline or via custom CSS). ")],-1)),l(r,{href:"forms/floating-labels.html#textareas"},{default:e(()=>[l(u,null,{default:e(()=>[l(_,{id:"floatingTextarea2",placeholder:"Leave a comment here",style:{height:"100px"}}),l(s,{for:"floatingTextarea2"},{default:e(()=>o[8]||(o[8]=[a("Comments")])),_:1,__:[8]})]),_:1})]),_:1})]),_:1,__:[9,10]})]),_:1})]),_:1}),l(d,{xs:12},{default:e(()=>[l(p,{class:"mb-4"},{default:e(()=>[l(m,null,{default:e(()=>o[11]||(o[11]=[t("strong",null,"Vue Floating labels",-1),a(),t("small",null,"Selects",-1)])),_:1,__:[11]}),l(f,null,{default:e(()=>[o[14]||(o[14]=t("p",{class:"text-body-secondary small"},[a(" Other than "),t("code",null,"<CFormInput>"),a(", floating labels are only available on "),t("code",null,"<CFormSelect>"),a("s. They work in the same way, but unlike "),t("code",null,"<CFormInput>"),a("s, they'll always show the "),t("code",null,"<CFormLabel>"),a(" in its floated state. "),t("strong",null,[a(" Selects with "),t("code",null,"size"),a(" and "),t("code",null,"multiple"),a(" are not supported. ")])],-1)),l(r,{href:"forms/floating-labels.html#selects"},{default:e(()=>[l(u,null,{default:e(()=>[l(g,{id:"floatingSelect","aria-label":"Floating label select example"},{default:e(()=>o[12]||(o[12]=[t("option",null,"Open this select menu",-1),t("option",{value:"1"},"One",-1),t("option",{value:"2"},"Two",-1),t("option",{value:"3"},"Three",-1)])),_:1,__:[12]}),l(s,{for:"floatingSelect"},{default:e(()=>o[13]||(o[13]=[a("Works with selects")])),_:1,__:[13]})]),_:1})]),_:1})]),_:1,__:[14]})]),_:1})]),_:1}),l(d,{xs:12},{default:e(()=>[l(p,{class:"mb-4"},{default:e(()=>[l(m,null,{default:e(()=>o[15]||(o[15]=[t("strong",null,"Vue Floating labels",-1),a(),t("small",null,"Layout",-1)])),_:1,__:[15]}),l(f,null,{default:e(()=>[o[19]||(o[19]=t("p",{class:"text-body-secondary small"}," When working with the CoreUI for Bootstrap grid system, be sure to place form elements within column classes. ",-1)),l(r,{href:"forms/floating-labels.html#layout"},{default:e(()=>[l(C,{xs:{gutter:2}},{default:e(()=>[l(d,{md:""},{default:e(()=>[l(u,null,{default:e(()=>[l(i,{id:"floatingInputGrid",type:"email",placeholder:"name@example.com",value:"email@example.com"}),l(s,{for:"floatingInputGrid"},{default:e(()=>o[16]||(o[16]=[a("Email address")])),_:1,__:[16]})]),_:1})]),_:1}),l(d,{md:""},{default:e(()=>[l(u,null,{default:e(()=>[l(g,{id:"floatingSelectGrid","aria-label":"Floating label select example"},{default:e(()=>o[17]||(o[17]=[t("option",null,"Open this select menu",-1),t("option",{value:"1"},"One",-1),t("option",{value:"2"},"Two",-1),t("option",{value:"3"},"Three",-1)])),_:1,__:[17]}),l(s,{for:"floatingSelectGrid"},{default:e(()=>o[18]||(o[18]=[a("Works with selects")])),_:1,__:[18]})]),_:1})]),_:1})]),_:1})]),_:1})]),_:1,__:[19]})]),_:1})]),_:1})]),_:1})}const T=b(y,[["render",w]]);export{T as default};
//# sourceMappingURL=FloatingLabels.js.map
